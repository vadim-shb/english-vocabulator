# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# API
POST          /api/security/sign-in                                                     @controllers.SecurityController.signIn
POST          /api/security/sign-up                                                     @controllers.SecurityController.signUp
GET           /api/security/sign-out                                                    @controllers.SecurityController.signOut
POST          /api/user/:userId/word                                                    @controllers.WordController.createWord(userId: Long)
PUT           /api/user/:userId/word/:wordId                                            @controllers.WordController.updateWord(userId: Long, wordId: Long)
GET           /api/user/:userId/word/:wordId                                            @controllers.WordController.findWord(userId: Long, wordId: Long)
GET           /api/user/:userId/words                                                   @controllers.WordController.findWords(userId: Long)
GET           /api/user/:userId/word-bundles                                            @controllers.WordBundleController.findWordBundles(userId: Long)
GET           /api/user/:userId/word-bundle/:wordBundleId                               @controllers.WordBundleController.findWordBundle(userId: Long, wordBundleId: Long)
POST          /api/user/:userId/word-bundle                                             @controllers.WordBundleController.createWordBundle(userId: Long)
PUT           /api/user/:userId/word-bundle/:wordBundleId                               @controllers.WordBundleController.updateWordBundle(userId: Long, wordBundleId: Long)
DELETE        /api/user/:userId/word-bundle/:wordBundleId                               @controllers.WordBundleController.deleteWordBundle(userId: Long, wordBundleId: Long)
PUT           /api/user/:userId/word-bundle/:wordBundleId/word/:wordId                  @controllers.WordBundleController.addWordToBundle(userId: Long, wordBundleId: Long, wordId: Long)
GET           /api/user/:userId/learn-collections                                       @controllers.LearnCollectionController.findLearnCollections(userId: Long)
GET           /api/user/:userId/learn-collection/:learnCollectionId                     @controllers.LearnCollectionController.findLearnCollection(userId: Long, learnCollectionId: Long)
POST          /api/user/:userId/learn-collection                                        @controllers.LearnCollectionController.createLearnCollection(userId: Long)
POST          /api/user/:userId/learn-collection/:learnCollectionId/word/:wordId        @controllers.LearnCollectionController.addWordToLearnCollection(userId: Long, learnCollectionId: Long, wordId: Long)
DELETE        /api/user/:userId/learn-collection/:learnCollectionId/word/:wordId        @controllers.LearnCollectionController.removeWordFromLearnCollection(userId: Long, learnCollectionId: Long, wordId: Long)

# Map static resources from the /public folder to the /assets URL path
GET           /                                                                         @controllers.Assets.at(path="/public", file="index.html")
GET           /*file                                                                    @controllers.Assets.at(path="/public", file)

